{"ast":null,"code":"// export const BASE_URL = 'https://auth.nomoreparties.co/';\n\n// export const register = (data) => {\n//     return fetch(`${BASE_URL}/signup`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//       .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const login = (data) => {\n//     return fetch(`${BASE_URL}/signin`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const checkToken = (jwt) => {\n//     return fetch(`${BASE_URL}/users/me`, {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${jwt}`,\n//       },\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\nclass Auth {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  register(data) {\n    return fetch(`${this._baseUrl}/signup`, {\n      /** signup - регистрация */\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n  login(data) {\n    return fetch(`${this._baseUrl}/signin`, {\n      /** signin - авторизация */\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  /** проверем токен */\n  checkToken(jwt) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst auth = new Auth({\n  url: 'https://auth.nomoreparties.co' /** базовый url */,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport { auth };","map":{"version":3,"names":["Auth","constructor","_ref","baseUrl","headers","_headers","_baseUrl","_checkResponse","res","ok","json","Promise","reject","status","register","data","fetch","method","body","JSON","stringify","then","login","checkToken","jwt","Authorization","auth","url"],"sources":["/Users/admin/ya-projects/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["// export const BASE_URL = 'https://auth.nomoreparties.co/';\n\n// export const register = (data) => {\n//     return fetch(`${BASE_URL}/signup`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//       .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const login = (data) => {\n//     return fetch(`${BASE_URL}/signin`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const checkToken = (jwt) => {\n//     return fetch(`${BASE_URL}/users/me`, {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${jwt}`,\n//       },\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\nclass Auth {\n  constructor ({ baseUrl, headers }) {\n    this._headers = headers\n    this._baseUrl = baseUrl\n  }\n\n  _checkResponse (res) {\n    if (res.ok) {\n      return res.json()\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  register (data) {\n    return fetch(`${this._baseUrl}/signup`, { /** signup - регистрация */\n     method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse)\n  }\n\n  login (data) {\n    return fetch(`${this._baseUrl}/signin`, { /** signin - авторизация */\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse)\n  }\n\n  /** проверем токен */\n  checkToken (jwt) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(this._checkResponse)\n  }\n}\n\nconst auth = new Auth({\n  url: 'https://auth.nomoreparties.co' /** базовый url */,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport { auth }\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAAAC,IAAA,EAAwB;IAAA,IAAtB;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAAF,IAAA;IAC/B,IAAI,CAACG,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACE,QAAQ,GAAGH,OAAO;EACzB;EAEAI,cAAcA,CAAEC,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;EAEAC,QAAQA,CAAEC,IAAI,EAAE;IACd,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACV,QAAS,SAAQ,EAAE;MAAE;MACzCW,MAAM,EAAE,MAAM;MACbb,OAAO,EAAE,IAAI,CAACC,QAAQ;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC,CAACM,IAAI,CAAC,IAAI,CAACd,cAAc,CAAC;EAC9B;EAEAe,KAAKA,CAAEP,IAAI,EAAE;IACX,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACV,QAAS,SAAQ,EAAE;MAAE;MACxCW,MAAM,EAAE,MAAM;MACdb,OAAO,EAAE,IAAI,CAACC,QAAQ;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC,CAACM,IAAI,CAAC,IAAI,CAACd,cAAc,CAAC;EAC9B;;EAEA;EACAgB,UAAUA,CAAEC,GAAG,EAAE;IACf,OAAOR,KAAK,CAAE,GAAE,IAAI,CAACV,QAAS,WAAU,EAAE;MACxCW,MAAM,EAAE,KAAK;MACbb,OAAO,EAAE;QACP,GAAG,IAAI,CAACC,QAAQ;QAChBoB,aAAa,EAAG,UAASD,GAAI;MAC/B;IACF,CAAC,CAAC,CAACH,IAAI,CAAC,IAAI,CAACd,cAAc,CAAC;EAC9B;AACF;AAEA,MAAMmB,IAAI,GAAG,IAAI1B,IAAI,CAAC;EACpB2B,GAAG,EAAE,+BAA+B,CAAC;EACrCvB,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,SAASsB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}