{"ast":null,"code":"// export const BASE_URL = 'https://auth.nomoreparties.co/';\n\n// export const register = (data) => {\n//     return fetch(`${BASE_URL}/signup`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//       .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const login = (data) => {\n//     return fetch(`${BASE_URL}/signin`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const checkToken = (jwt) => {\n//     return fetch(`${BASE_URL}/users/me`, {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${jwt}`,\n//       },\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n// class Auth {\n//     constructor(config) {\n//       this._url = config.url;\n//       this._headers = config.headers;\n//     }\n\n//     _getResponseData(res) {\n//       if (res.ok) {\n//         return res.json();\n//       }\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n\n//     /** универсальный метод запрос с проверкой  */\n//     _request(path, method, data) {\n//       let body = data;\n//       if ((method === 'PATCH' || method === 'POST') && data) {\n//         body = JSON.stringify(data);\n//       }\n//       return fetch(this._url + path, {\n//         method,\n//         headers: this._headers,\n//         body,\n//       })\n//       .then(this._getResponseData);\n//     }\n\n//     register(data) {\n//       return this._request(`/signup`, 'POST', data); /** signup - регистрация */\n//     }\n\n//     login(data) {\n//       return this._request(`/signin`, 'POST', data); /** signin - авторизация */\n//     }\n\n//     /** проверем токен */\n//     checkToken(jwt) {\n//       return fetch(`${this._url}/users/me`, {\n//         method: 'GET',\n//         headers: {\n//           ...this._headers,\n//           Authorization: `Bearer ${jwt}`,\n//         },\n//       }).then(this._getResponseData);\n//     }\n//   }\n\n//   const auth = new Auth({\n//     url: 'https://auth.nomoreparties.co', /** базовый url */\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   });\n\n//   export { auth };","map":{"version":3,"names":[],"sources":["/Users/admin/ya-projects/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["// export const BASE_URL = 'https://auth.nomoreparties.co/';\n\n// export const register = (data) => {\n//     return fetch(`${BASE_URL}/signup`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//       .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const login = (data) => {\n//     return fetch(`${BASE_URL}/signin`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(data),\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n//   export const checkToken = (jwt) => {\n//     return fetch(`${BASE_URL}/users/me`, {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${jwt}`,\n//       },\n//     })\n//     .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n//   };\n\n\n// class Auth {\n//     constructor(config) {\n//       this._url = config.url;\n//       this._headers = config.headers;\n//     }\n\n//     _getResponseData(res) {\n//       if (res.ok) {\n//         return res.json();\n//       }\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n\n//     /** универсальный метод запрос с проверкой  */\n//     _request(path, method, data) {\n//       let body = data;\n//       if ((method === 'PATCH' || method === 'POST') && data) {\n//         body = JSON.stringify(data);\n//       }\n//       return fetch(this._url + path, {\n//         method,\n//         headers: this._headers,\n//         body,\n//       })\n//       .then(this._getResponseData);\n//     }\n\n//     register(data) {\n//       return this._request(`/signup`, 'POST', data); /** signup - регистрация */\n//     }\n\n//     login(data) {\n//       return this._request(`/signin`, 'POST', data); /** signin - авторизация */\n//     }\n\n//     /** проверем токен */\n//     checkToken(jwt) {\n//       return fetch(`${this._url}/users/me`, {\n//         method: 'GET',\n//         headers: {\n//           ...this._headers,\n//           Authorization: `Bearer ${jwt}`,\n//         },\n//       }).then(this._getResponseData);\n//     }\n//   }\n\n//   const auth = new Auth({\n//     url: 'https://auth.nomoreparties.co', /** базовый url */\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   });\n\n//   export { auth };\n\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}